services:
  stock-producer:
    build: ./stock-trade-producer
    container_name: stock-trade-producer-container
    env_file: ./stock-trade-producer/variables.env
    environment:
      - PYTHONUNBUFFERED=true
    volumes:
      - ./stock-trade-producer:/app
    depends_on:
      - kafka

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka-container
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  spark:
    build: ./spark-consumer
    container_name: spark-consumer-container
    ports:
      - "4040:4040"
    environment:
      - SPARK_MODE=master
    volumes:
      - ./spark-consumer:/app
    depends_on:
      - kafka
      - postgres
      - stock-producer

  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=stock_trades
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - postgres
    volumes:
      - ./grafana:/var/lib/grafana